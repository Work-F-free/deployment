services:
  minio:
    container_name: minio
    image: 'bitnami/minio:latest'
    volumes:
      - 'minio_data:/data'
    ports:
      - "${MINIO_ROOT_PORT}:${MINIO_ROOT_PORT}"
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: "${MINIO_ROOT_USER:?error}"
      MINIO_ROOT_PASSWORD: "${MINIO_ROOT_PASSWORD:?error}"
      MINIO_USE_SSL: "${MINIO_USE_SSL:?error}"
      MINIO_DEFAULT_BUCKETS: "${MINIO_BUCKET_NAME:?error}"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "15"
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: 2G
    networks:
      - frontend

  mongo:
    image: mongo:6.0
    environment:
      DB_USERNAME: "${DB_MONGO_USERNAME:?error}"
      DB_PASSWORD: "${DB_MONGO_PASSWORD:?error}"
      DB_NAME: "${DB_MONGO_NAME:?error}"
    ports:
      - "${DB_MONGO_PORT}:${DB_MONGO_PORT}"
    healthcheck:
      test: mongo --username ${DB_MONGO_USERNAME} --password ${DB_MONGO_PASSWORD} --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      start_period: 30s
      retries: 5
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "15"
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G
    networks:
      - backend_1

  planner:
    container_name: planner_service
    build: https://${GIT_TOKEN}@github.com/Work-F-free/plan-manager.git#${PLANNER_BRANCH}
    depends_on:
      - mongo
    environment:
      - API_PORT=${PLANNER_API_PORT}
      - DB_HOST=${DB_MONGO_HOST}
      - DB_PORT=${DB_MONGO_PORT}
      - DB_USERNAME=${DB_MONGO_USERNAME}
      - DB_NAME=${DB_MONGO_NAME}
      - DB_PASSWORD=${DB_MONGO_PASSWORD}
    ports:
      - "${PLANNER_API_PORT}:${PLANNER_API_PORT}"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "15"
    networks:
      - backend_1


  bookcow-api:
    build: https://${GIT_TOKEN}@github.com/Work-F-free/core-api.git#${CORE_BRANCH}
    networks:
      - backend
    depends_on:
      bookcow-db:
        condition: service_healthy
      bookcow-keycloak:
        condition: service_healthy

    ports:
      - '${CORE_API_PORT}:${CORE_API_PORT}'
    environment:
      - DB_HOST=${DB_HOST:-bookcow-db}
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-bookcow-db}
      - DB_USER=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}

  bookcow-db:
    image: postgres:13.8
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
      POSTGRES_USER: "${DB_USERNAME}"
      POSTGRES_DB: "${DB_HOST}"
    ports:
      - '${DB_PORT}:5432'
    healthcheck:
      test: pg_isready -U postgres -d bookcow-db
      interval: 10s
      timeout: 3s
      retries: 3

  bookcow-keycloak:
    image: quay.io/keycloak/keycloak:24.0
    environment:
      KC_HOSTNAME: ${KC_HOSTNAME}
      KC_HOSTNAME_PORT: ${KC_HOSTNAME_PORT}
      KC_HOSTNAME_STRICT_BACKCHANNEL: ${KC_HOSTNAME_STRICT_BACKCHANNEL}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HEALTH_ENABLED: ${KC_HEALTH_ENABLED}
      KC_LOG_LEVEL: ${KC_LOG_LEVEL}
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:7080/health/ready" ]
      interval: 15s
      timeout: 2s
      retries: 15
    command: ["start-dev", "--http-port", "${KC_HOSTNAME_PORT}", "--https-port", "${KC_PORT_2}"]
    ports:
      - "${KC_HOSTNAME_PORT}:${KC_HOSTNAME_PORT}"
      - "${KC_PORT_2}:${KC_PORT_2}"
    networks:
      - local_network

  actualizer:
    container_name: actualizer_service
    build: https://${GIT_TOKEN}@github.com/Work-F-free/actualizer.git#${ACTUALIZER_BRANCH}
    depends_on:
      - bookcow-db
    environment:
      - API_PORT=${ACTUALIZER_API_PORT}
      - DB_HOST=${DB_HOST:-bookcow-db}
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_NAME=${DB_NAME:-bookcow-db}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
    ports:
      - "${ACTUALIZER_API_PORT}:${ACTUALIZER_API_PORT}"
    restart: always
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "500k"
        max-file: "15"
    networks:
      - backend

  frontend:
    build: https://${GIT_TOKEN}@github.com/Work-F-free/client.git#${FRONTEND_BRANCH}
    ports:
      - "${FRONTEND_PORT}:80"


volumes:
  minio_data:

networks:
  frontend:
  backend:
  backend_1:
  local_network:
    driver: bridge